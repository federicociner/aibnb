{"version":3,"sources":["logo.svg","components/Map/Pin.js","components/common/Grid/index.js","components/common/Theme/index.js","components/Map/InfoWindow.js","components/Map/Map.js","components/Map/constants.js","components/Map/helpers.js","components/Map/index.js","components/NavbarForm/selectors.js","components/common/FormElements/DatePicker/DatePicker.js","components/common/FormElements/DatePicker/index.js","components/common/FormElements/Select/Select.js","components/common/FormElements/Select/index.js","components/NavbarForm/NavbarForm.js","services/rest/rest.js","services/rest/endpoints.js","components/NavbarForm/actions.js","components/NavbarForm/index.js","components/NavbarForm/helpers.js","components/NavbarForm/model.js","components/Navbar/Navbar.js","components/Navbar/index.js","components/Main/globalStyles.js","actions/actions.js","reducers/reducer.js","components/Main/constants.js","actions/map.js","reducers/map.js","components/NavbarForm/reducer.js","reducers/index.js","store/configureStore.js","components/Main/Main.js","components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","StyledPin","styled","div","_templateObject","Pin","_ref","props","_extends","react_default","a","createElement","Container","Grid_templateObject","Row","_templateObject2","Col","_templateObject3","width","Theme","black","darkblue","grey","lightblue","lightgrey","white","InfoWindow","_ref$accommodates","accommodates","_ref$availability_","availability_365","_ref$bathrooms","bathrooms","_ref$bedrooms","bedrooms","compound","city","_ref$number_of_review","number_of_reviews","_ref$property_type","property_type","_ref$price","price","_ref$review_scores_ra","review_scores_rating","state","zipcode","Wrapper","PropertyRow","PropertyBadge","PropertyInfoCol","PropertyInfoContainer","PropertyInfoRow","IconTile","index_es","icon","pull","RatingRow","react_rating_default","initialRating","readonly","emptySymbol","color","fullSymbol","RatingText","AddressContainer","StatTileContainer","StatCol","StatTile","Stat","StatTitle","propTypes","PropTypes","string","InfoWindow_templateObject","InfoWindow_templateObject2","InfoWindow_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","h3","_templateObject13","h4","_templateObject14","h5","_templateObject15","navStyle","padding","position","right","top","MapWrapper","closePopUpClickHandler","_ref$viewport","viewport","height","latitude","longitude","zoom","popupInfo","_ref$locations","locations","setViewPort","popUpClickHandler","Map_Wrapper","esm","Map_extends","mapboxApiAccessToken","mapStyle","onViewportChange","vp","map","location","index","key","Map_Pin","label","onClick","onMouseEnter","tipSize","anchor","onClose","Map_InfoWindow","className","style","google","any","initialCenter","shape","number","Map_templateObject","formatListings","arguments","length","undefined","listing","_objectWithoutProperties","_objectSpread","Number","toFixed","toString","withViewPort","withState","withPopUp","withLocationChanges","lifecycle","componentDidUpdate","prevLocations","_this$props","this","_this$props$locations","_this$props$locations3","_slicedToArray","console","log","isEqual","withLocations","withProps","_ref2","setPopUp","popUp","compose","connect","_ref3","_ref3$navbar$listings","navbar","listings","getListings","Map","DatePickerView","handleChange","startDate","DatePicker_Wrapper","StyledDatePicker","selected","onChange","func","input","onCustomChange","DatePicker_templateObject","DatePicker","DatePicker_templateObject2","withDateValues","moment","withDateMethods","setStartDate","_ref$input","date","change","SelectView","defaultValue","isDisabled","name","options","value","Select_Wrapper","react_select_esm","onBlurResetsInput","bool","Select_templateObject","required","NavbarForm","countryChange","errorMessage","handleSubmit","model","stateChange","valid","onSubmit","values","FormLabel","SelectField","NavbarForm_extends","country","component","Select","type","validate","neighborhood","Field","beds","baths","StyledButton","active","ErrorContainer","NavbarForm_templateObject","NavbarForm_templateObject2","NavbarForm_templateObject3","button","attrs","disabled","NavbarForm_templateObject4","axiosInstance","axios","create","headers","X-Requested-By","X-Requested-With","restService","url","_ref$options","get","catch","err","Error","_ref2$options","body","post","endpoints","getAllStates","concat","getAllNeighborhoods","getAllListings","getListingById","setNavbarStates","createAction","setNavbarNeighborhoods","setListings","setErrorMessage","withChangeHandlers","params","then","_ref4","_ref4$data","data","getOptionsFromStates","error","_ref5","_ref6","_ref6$data","hood","neighbourhood_cleansed","getOptionsFromNeighborhoods","createViewModel","_ref7","neighborhoods","states","min","isEmpty","navFormModel","reduxForm","form","dispatch","_values$country","_values$state","_values$neighborhood","unix","format","_ref$data","NavbarFormView","initialValues","_ref4$navbar$errorMes","getErrorMessage","_ref$navbar$states","getStates","_ref2$navbar$neighbor","getNeighborhoods","Navbar","Navbar_Wrapper","LogoCol","Logo","src","logo","alt","components_NavbarForm","cards","Navbar_templateObject","img","Navbar_templateObject2","Navbar_templateObject3","withCards","title","injectGlobal","globalStyles_templateObject","normalize","globalStyles_templateObject2","setItem","initialState","isFetching","app","handleActions","reducer_defineProperty","reducer_objectSpread","payload","VisibilityFilters","visibilityFilter","action","filter","NavbarForm_reducer_defineProperty","_handleActions","NavbarForm_reducer_objectSpread","combineReducers","reducer","configureStore","predefinedState","history","composeEnhancers","window","_typeof","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","middleware","thunk","routerMiddleware","enhancer","applyMiddleware","apply","createStore","rootReducer","store","Main","es","react","components_Navbar","components_Map","library","add","faBath","faBed","faUsers","faStar","App","Router","Route","path","Boolean","hostname","match","__INITIAL_STATE__","createHistory","hydrate","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4ca8e36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c0460353.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Pin = ({ ...props }) => <StyledPin {...props} />;\n\nconst StyledPin = styled.div`\n    background-color: rgba(156, 255, 87, 0.75);\n    border-radius: 50%;\n    border: 1px solid #fff;\n    width: 15px;\n    height: 15px;\n    margin-left: -7.5px;\n    :hover {\n        cursor: pointer;\n    }\n`;\n\nexport default Pin;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    width: 100%;\n    padding-right: 15px;\n    padding-left: 15px;\n    margin-right: auto;\n    margin-left: auto;\n`;\n\nexport const Row = styled.div`\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-wrap: wrap;\n    flex-wrap: wrap;\n    margin-right: -15px;\n    margin-left: -15px;\n`;\nexport const Col = styled.div`\n    width: ${props => props.width || \"100%\"}\n    padding: .75rem;\n    -ms-flex-preferred-size: 0;\n    flex-basis: 0;\n    -webkit-box-flex: 1;\n    -ms-flex-positive: 1;\n    flex-grow: 1;\n    max-width: 100%;\n`;\n","const colors = {\n    black: \"#000\",\n    darkblue: \"#0c7cba\",\n    grey: \"#eaeaea\",\n    lightblue: \"#99d2f2\",\n    lightgrey: \"#f4f4f4\",\n    white: \"#fff\"\n};\nexport default {\n    colors\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { Row, Col, Container } from \"../common/Grid\";\nimport Theme from \"../common/Theme\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Rating from \"react-rating\";\n\nconst InfoWindow = ({\n    accommodates = \"8\",\n    availability_365 = \"80\",\n    bathrooms = \"2\",\n    bedrooms = \"2\",\n    compound,\n    city,\n    number_of_reviews = \"535\",\n    property_type = \"Single Family\",\n    price = \"1500\",\n    review_scores_rating = 4.5,\n    state,\n    zipcode\n}) => (\n    <Wrapper>\n        <PropertyRow>\n            <Col>\n                <PropertyBadge>{property_type}</PropertyBadge>\n            </Col>\n            <PropertyInfoCol>\n                <PropertyInfoContainer>\n                    <PropertyInfoRow>\n                        <IconTile>\n                            {bedrooms}\n                            <FontAwesomeIcon icon=\"bed\" pull=\"right\" />\n                        </IconTile>\n                        <IconTile>\n                            {bathrooms}\n                            <FontAwesomeIcon icon=\"bath\" pull=\"right\" />\n                        </IconTile>\n                        <IconTile>\n                            {accommodates}\n                            <FontAwesomeIcon icon=\"users\" pull=\"right\" />\n                        </IconTile>\n                    </PropertyInfoRow>\n                    <RatingRow>\n                        <Rating\n                            initialRating={review_scores_rating}\n                            readonly\n                            emptySymbol={\n                                <FontAwesomeIcon\n                                    icon=\"star\"\n                                    color={Theme.colors.lightgrey}\n                                />\n                            }\n                            fullSymbol={\n                                <FontAwesomeIcon icon=\"star\" color=\"#ffd800\" />\n                            }\n                        />\n                        <RatingText>\n                            {compound} ({number_of_reviews})\n                        </RatingText>\n                    </RatingRow>\n                </PropertyInfoContainer>\n            </PropertyInfoCol>\n        </PropertyRow>\n        <AddressContainer>\n             {city}, {state}, {zipcode}\n        </AddressContainer>\n        <StatTileContainer>\n            <Row>\n                <StatCol>\n                    <StatTile>\n                        <Stat>${price}</Stat>\n                        <StatTitle>Predicted Price</StatTitle>\n                    </StatTile>\n                </StatCol>\n                <StatCol>\n                    <StatTile>\n                        <Stat>{availability_365}%</Stat>\n                        <StatTitle>Availability</StatTitle>\n                    </StatTile>\n                </StatCol>\n                {compound && (\n                    <StatCol>\n                        <StatTile>\n                            <Stat>\n                                {compound}\n                                /10\n                            </Stat>\n                            <StatTitle>Sentiment</StatTitle>\n                        </StatTile>\n                    </StatCol>\n                )}\n            </Row>\n        </StatTileContainer>\n    </Wrapper>\n);\n\nInfoWindow.propTypes = {\n    accommodates: PropTypes.string,\n    availability_365: PropTypes.string,\n    bathrooms: PropTypes.string,\n    bedrooms: PropTypes.string,\n    city: PropTypes.string,\n    compound: PropTypes.string,\n    number_of_reviews: PropTypes.string,\n    price: PropTypes.string,\n    property_type: PropTypes.string,\n    review_scores_rating: PropTypes.string,\n    state: PropTypes.string,\n    zipcode: PropTypes.string\n};\n\nexport default InfoWindow;\n\nconst Wrapper = styled.div`\n    min-width: 300px;\n    min-height: 100px;\n    padding: 10px;\n`;\n\nconst PropertyRow = styled(Row)`\n    border-bottom: 1px solid ${Theme.colors.grey};\n`;\n\nconst PropertyBadge = styled(Container)`\n    background-color: ${Theme.colors.lightblue};\n    color: ${Theme.colors.white};\n    padding: 15px 5px;\n    position: absolute;\n    width: 150px;\n    left: -25px;\n    text-transform: capitalize;\n\n    &::after {\n        content: \"\";\n        background-color: ${Theme.colors.darkblue};\n        width: 25px;\n        height: 25px;\n        position: absolute;\n        left: 0;\n        bottom: -25px;\n        transform: skewY(223deg) translateY(-14px);\n        z-index: -1;\n    }\n`;\nconst PropertyInfoContainer = styled(Container)`\n    text-align: left;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 5px 0;\n`;\nconst PropertyInfoRow = styled(Row)`\n    padding: 0 10px;\n`;\nconst RatingRow = styled(Row)`\n    padding: 0 10px;\n`;\nconst PropertyInfoCol = styled(Col)`\n    flex-grow: 2;\n    padding-left: 20px;\n`;\n\nconst IconTile = styled(Col)`\n    text-align: left;\n    font-weight: bold;\n    font-size: 20px;\n    padding: 10px 5px;\n`;\n\nconst AddressContainer = styled(Container)`\n    text-align: left;\n    font-weight: bold;\n    padding: 20px 0;\n    text-transform: uppercase;\n`;\nconst StatCol = styled(Col)`\n    padding: 2px;\n`;\n\nconst StatTile = styled.div`\n    background-color: ${Theme.colors.lightgrey};\n    border: 1px solid ${Theme.colors.grey};\n    width: 100%;\n    min-height: 50px;\n`;\n\nconst StatTileContainer = styled(Container)`\n    bottom: 0px;\n`;\nconst RatingText = styled.h3`\n    margin: 0px;\n    font-size: 15px;\n    line-height: 23px;\n    text-align: left;\n    color: ${Theme.colors.black};\n`;\n\nconst StatTitle = styled.h4`\n    margin: 0px;\n    font-size: 12px;\n    text-align: center;\n    color: ${Theme.colors.black};\n`;\n\nconst Stat = styled.h5`\n    margin: 0px;\n    font-size: 24px;\n    font-weight: 400;\n    text-align: center;\n    color: ${Theme.colors.black};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReactMapGL, { Marker, Popup, NavigationControl } from \"react-map-gl\";\nimport styled from \"styled-components\";\nimport { MAP_BOX_API_KEY } from \"./constants\";\nimport Pin from \"./Pin\";\nimport InfoWindow from \"./InfoWindow\";\n\nconst navStyle = {\n    padding: \"10px\",\n    position: \"absolute\",\n    right: \"30px\",\n    top: 0\n};\n\nconst MapWrapper = ({\n    closePopUpClickHandler,\n    viewport = {\n        height: \"100vh\",\n        latitude: 37.78,\n        longitude: -122.41,\n        width: \"100%\",\n        zoom: 8\n    },\n    popupInfo,\n    locations = [],\n    setViewPort,\n    popUpClickHandler\n}) => (\n    <Wrapper>\n        <ReactMapGL\n            mapboxApiAccessToken={MAP_BOX_API_KEY}\n            mapStyle=\"mapbox://styles/mapbox/light-v9\"\n            onViewportChange={vp => setViewPort(vp)}\n            {...viewport}\n        >\n            {locations &&\n                locations.map((location, index) => (\n                    <Marker key={index} {...location}>\n                        <Pin\n                            label={\"test\"}\n                            onClick={() => popUpClickHandler(location)}\n                            onMouseEnter={() => popUpClickHandler(location)}\n                        />\n                    </Marker>\n                ))}\n            {popupInfo && (\n                <Popup\n                    tipSize={5}\n                    anchor=\"bottom\"\n                    {...popupInfo}\n                    onClose={closePopUpClickHandler}\n                >\n                    <InfoWindow {...popupInfo} />\n                </Popup>\n            )}\n            <div className=\"nav\" style={navStyle}>\n                <NavigationControl onViewportChange={vp => setViewPort(vp)} />\n            </div>\n        </ReactMapGL>\n    </Wrapper>\n);\n\nMapWrapper.propTypes = {\n    google: PropTypes.any,\n    initialCenter: PropTypes.shape({}),\n    locations: PropTypes.shape([]),\n    zoom: PropTypes.number\n};\n\nconst Wrapper = styled.div`\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n`;\n\nexport default MapWrapper;\n","export const GOOGLE_API_KEY = \"AIzaSyDHVxp3eGaSbCJSZSImVfGYMmz6GSk869w\";\nexport const MAP_BOX_API_KEY =\n    \"pk.eyJ1Ijoiam9zaGNhbCIsImEiOiJjam8xeTg3a2IwY3R4M2twZXN6bmNwYWhrIn0.CDjKxqEGL1OuNtQwNV74_A\";\n","export const formatListings = (listings = []) =>\n    listings.map(\n        ({\n            availability_365,\n            compound,\n            zipcode,\n            review_scores_rating,\n            ...listing\n        }) => ({\n            availability_365: ((Number(availability_365) / 365) * 100).toFixed(\n                0\n            ),\n            compound: compound ? (Number(compound) * 10).toFixed(1) : undefined,\n            zipcode: Number(zipcode)\n                .toFixed(0)\n                .toString(),\n            review_scores_rating: (\n                (Number(review_scores_rating) / 100) *\n                5\n            ).toFixed(1),\n            ...listing\n        })\n    );\n","import Map from \"./Map\";\nimport { compose, withProps, withState, lifecycle } from \"recompose\";\nimport { connect } from \"react-redux\";\nimport { getListings } from \"../NavbarForm/selectors\";\nimport { formatListings } from \"./helpers\";\nimport isEqual from \"lodash/isEqual\";\n\nconst initialViewPort = {\n    height: \"100vh\",\n    latitude: 37.78,\n    longitude: -122.41,\n    width: \"100%\",\n    zoom: 8\n};\n\nconst withViewPort = withState(\"viewport\", \"setViewPort\", initialViewPort);\n\nconst withPopUp = withState(\"popupInfo\", \"setPopUp\");\n\nconst withLocationChanges = lifecycle({\n    componentDidUpdate({ locations: prevLocations }) {\n        const {\n            locations: [{ latitude, longitude } = {}] = [],\n            locations,\n            setViewPort\n        } = this.props;\n        console.log(locations, prevLocations);\n        if (locations && !isEqual(locations, prevLocations)) {\n            setViewPort({\n                height: \"100vh\",\n                latitude: Number(latitude),\n                longitude: Number(longitude),\n                width: \"100%\",\n                zoom: 8\n            });\n        }\n    }\n});\n\nconst withLocations = withProps(({ setPopUp }) => ({\n    closePopUpClickHandler: () => {\n        setPopUp(\"\");\n    },\n    popUpClickHandler: popUp => {\n        setPopUp(popUp);\n    }\n}));\n\nconst mapStateToProps = state => ({\n    locations: formatListings(getListings(state))\n});\n\nexport default compose(\n    connect(mapStateToProps),\n    withViewPort,\n    withPopUp,\n    withLocations,\n    withLocationChanges\n)(Map);\n","export const getStates = ({ navbar: { states = [] } }) => states;\n\nexport const getNeighborhoods = ({ navbar: { neighborhoods = [] } }) =>\n    neighborhoods;\n\nexport const getListings = ({ navbar: { listings = [] } }) => listings;\n\nexport const getErrorMessage = ({ navbar: { errorMessage = [] } }) =>\n    errorMessage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst DatePickerView = ({ handleChange, startDate }) => (\n    <Wrapper>\n        <StyledDatePicker selected={startDate} onChange={handleChange} />\n    </Wrapper>\n);\n\nDatePickerView.propTypes = {\n    handleChange: PropTypes.func,\n    input: PropTypes.shape({}),\n    onCustomChange: PropTypes.func,\n    startDate: PropTypes.shape({})\n};\n\nconst Wrapper = styled.div``;\nconst StyledDatePicker = styled(DatePicker)`\n    input {\n        width: 100%;\n    }\n`;\n\nexport default DatePickerView;\n","import DatePickerView from \"./DatePicker\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { compose, withState, withProps } from \"recompose\";\nimport moment from \"moment\";\nconst withDateValues = withState(\"startDate\", \"setStartDate\", moment());\n\nconst withDateMethods = withProps(\n    ({ setStartDate, input: { onChange } = {} }) => ({\n        handleChange: date => {\n            setStartDate(date);\n            onChange(date);\n        }\n    })\n);\n\nexport default compose(\n    connect(\n        null,\n        change\n    ),\n    withDateValues,\n    withDateMethods\n)(DatePickerView);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from \"react-select\";\nconst SelectView = ({\n    className,\n    defaultValue,\n    input: { onChange },\n    isDisabled,\n    name,\n    options,\n    value\n}) => (\n    <Wrapper className={className}>\n        <Select\n            name={name}\n            isDisabled={isDisabled}\n            options={options}\n            onChange={onChange}\n            value={value}\n            defaultValue={defaultValue}\n            onBlurResetsInput={false}\n        />\n    </Wrapper>\n);\n\nSelectView.propTypes = {\n    className: PropTypes.string,\n    defaultValue: PropTypes.string,\n    handleChange: PropTypes.func,\n    isDisabled: PropTypes.bool,\n    input: PropTypes.shape({}),\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onCustomChange: PropTypes.func,\n    options: PropTypes.shape({}),\n    value: PropTypes.string\n};\n\nconst Wrapper = styled.div``;\n\nexport default SelectView;\n","import SelectView from \"./Select\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { compose } from \"recompose\";\n\nexport default compose(\n    connect(\n        null,\n        change\n    )\n)(SelectView);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field } from \"redux-form\";\nimport styled from \"styled-components\";\nimport { Row, Col } from \"../common/Grid\";\nimport Theme from \"../common/Theme\";\nimport DatePicker from \"../common/FormElements/DatePicker\";\nimport Select from \"../common/FormElements/Select\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst required = value => (value ? undefined : \"Required\");\nconst NavbarForm = ({\n    countryChange,\n    errorMessage,\n    handleSubmit,\n    model,\n    stateChange,\n    valid\n}) => (\n    <form onSubmit={values => handleSubmit(values)}>\n        <Row>\n            <Col>\n                <FormLabel>Country</FormLabel>\n                <SelectField\n                    {...model.country}\n                    onChange={countryChange}\n                    name=\"country\"\n                    component={Select}\n                    type=\"text\"\n                />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <FormLabel>State</FormLabel>\n                <SelectField\n                    {...model.state}\n                    onChange={stateChange}\n                    name=\"state\"\n                    component={Select}\n                    type=\"text\"\n                    validate={required}\n                />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <FormLabel>Neighborhood</FormLabel>\n                <SelectField\n                    {...model.neighborhood}\n                    name=\"neighborhood\"\n                    component={Select}\n                    type=\"text\"\n                    validate={required}\n                />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <FormLabel>Date</FormLabel>\n                <Field\n                    {...model.date}\n                    name=\"date\"\n                    component={DatePicker}\n                    type=\"text\"\n                />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <FormLabel>Beds</FormLabel>\n                <Field\n                    {...model.beds}\n                    type=\"number\"\n                    name=\"beds\"\n                    component=\"input\"\n                />\n            </Col>\n            <Col>\n                <FormLabel>Baths</FormLabel>\n                <Field\n                    {...model.baths}\n                    name=\"baths\"\n                    component=\"input\"\n                    type=\"number\"\n                />\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n                <StyledButton type=\"submit\" active={valid}>\n                    Submit\n                </StyledButton>\n                <ErrorContainer>{errorMessage}</ErrorContainer>\n            </Col>\n        </Row>\n    </form>\n);\n\nNavbarForm.propTypes = {\n    countryChange: PropTypes.func,\n    errorMessage: PropTypes.string,\n    handleSubmit: PropTypes.func,\n    stateChange: PropTypes.func\n};\n\nexport default NavbarForm;\n\nconst FormLabel = styled.label``;\nconst SelectField = styled(Field)`\n    text-transform: capitalize;\n`;\nconst ErrorContainer = styled.div`\n    width: 100%;\n    color: red;\n`;\nconst StyledButton = styled.button.attrs({\n    disabled: props => !props.active\n})`\n    background-color: ${props =>\n        props.active ? Theme.colors.darkblue : Theme.colors.lightgrey};\n    color: ${props => (props.active ? Theme.colors.white : Theme.colors.black)}\n    display: inline-block;\n    min-width: 50%;\n    font-weight: 400;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    border: 1px solid transparent;\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    border-radius: 0.25rem;\n`;\n","import axios from \"axios\";\nconst axiosInstance = axios.create({\n    headers: {\n        \"X-Requested-By\": \"123\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n    }\n});\nconst restService = {};\n// common get method\nrestService.get = ({ url, options = {} }) =>\n    axiosInstance.get(url, options).catch(err => {\n        throw new Error(err);\n    });\n\n// common post method\nrestService.post = ({ url, options = {}, body }) =>\n    axiosInstance.post(url, body, options).catch(err => {\n        throw new Error(err);\n    });\n\nexport default restService;\n","// const baseUrl = \"http://127.0.0.1:5000\"; // for development\nconst baseUrl = \"\"; // for production\n\nexport const endpoints = {\n    getAllStates: `${baseUrl}/listing/getAllStates`,\n    getAllNeighborhoods: `${baseUrl}/listing/getAllNeighborhoods`,\n    getAllListings: `${baseUrl}/listing/getAllListings`,\n    getListingById: `${baseUrl}/listing/getListingsById`\n};\n","import { createAction } from \"redux-actions\";\n\nexport const setNavbarStates = createAction(\"NAVBAR/SET_STATES\");\nexport const setNavbarNeighborhoods = createAction(\"NAVBAR/SET_NEIGHBORHOODS\");\nexport const setListings = createAction(\"MAP/SET_ACTIONS\");\nexport const setErrorMessage = createAction(\"NAVBAR/SET_ERROR_MESSAGE\");\n","import { reduxForm } from \"redux-form\";\nimport NavbarFormView from \"./NavbarForm\";\nimport { navFormModel } from \"./model\";\n\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport { withProps } from \"recompose\";\nimport restService from \"../../services/rest/rest\";\nimport { endpoints } from \"../../services/rest/endpoints\";\nimport {\n    setNavbarStates,\n    setNavbarNeighborhoods,\n    setListings,\n    setErrorMessage\n} from \"./actions\";\nimport { getNeighborhoods, getStates, getErrorMessage } from \"./selectors\";\nimport { getOptionsFromStates, getOptionsFromNeighborhoods } from \"./helpers\";\nimport isEmpty from \"lodash/isEmpty\";\n\nconst handleSubmission = (values, dispatch) => {\n\n    const {\n        country: { value: country } = {},\n        state: { value: state } = {},\n        neighborhood: { value: neighborhood } = {},\n        beds,\n        baths,\n        date\n    } = values;\n\n    restService\n        .get({\n            url: endpoints.getAllListings,\n            options: {\n                params: { country, state, neighborhood, beds, baths, date: moment.unix(date).format('X') }\n            }\n        })\n        .then(({ data: { data } = {} }) => {\n            if (!data || isEmpty(data)) {\n                dispatch(\n                    setErrorMessage(\n                        \"No Results Were Found. Please Try Different Parameters.\"\n                    )\n                );\n            } else {\n                dispatch(setErrorMessage(\"\"));\n            }\n            dispatch(setListings(data));\n        })\n        .catch(error => {\n            console.log(error);\n            return [];\n        });\n\n    return values;\n};\n\nconst withChangeHandlers = withProps(\n    ({ setNavbarStates, setNavbarNeighborhoods }) => ({\n        countryChange: ({ value }) => {\n            restService\n                .get({\n                    url: endpoints.getAllStates,\n                    options: { params: { country: value } }\n                })\n                .then(({ data: { data } = {} }) => {\n                    setNavbarStates(getOptionsFromStates(data));\n                })\n                .catch(error => {\n                    console.log(error);\n                    return [];\n                });\n        },\n        stateChange: ({ value }) => {\n            restService\n                .get({\n                    url: endpoints.getAllNeighborhoods,\n                    options: { params: { state: value } }\n                })\n                .then(({ data: { data } = {} }) => {\n                    setNavbarNeighborhoods(getOptionsFromNeighborhoods(data));\n                })\n                .catch(error => {\n                    console.log(error);\n                    return [];\n                });\n        }\n    })\n);\n\nconst createViewModel = withProps(({ states, neighborhoods }) => ({\n    model: navFormModel({ states, neighborhoods })\n}));\n\nconst mapStateToProps = state => ({\n    initialValues: {\n        baths: \"2\",\n        beds: \"2\",\n        country: {\n            label: \"United States\",\n            value: \"US\"\n        },\n        date: moment()\n    },\n    errorMessage: getErrorMessage(state),\n    states: getStates(state),\n    neighborhoods: getNeighborhoods(state)\n});\n\nconst NavbarForm = reduxForm({\n    form: \"contact\",\n    onSubmit: handleSubmission\n})(NavbarFormView);\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            setNavbarStates,\n            setNavbarNeighborhoods,\n            setListings,\n            setErrorMessage\n        }\n    ),\n    withChangeHandlers,\n    createViewModel\n)(NavbarForm);\n","export const getOptionsFromStates = (states = []) =>\n    states.map(({ state }) => ({ label: state, value: state }));\nexport const getOptionsFromNeighborhoods = (neighborhoods = []) =>\n    neighborhoods.map(({ neighbourhood_cleansed: hood }) => ({\n        label: hood,\n        value: hood\n    }));\n","import isEmpty from \"lodash/isEmpty\";\n\nexport const navFormModel = ({ neighborhoods, states }) => ({\n    baths: {\n        min: \"1\"\n    },\n    beds: {\n        min: \"1\"\n    },\n    country: {\n        options: [\n            {\n                label: \"andorra\",\n                value: \"andorra\"\n            },\n            {\n                label: \"argentina\",\n                value: \"argentina\"\n            },\n            {\n                label: \"australia\",\n                value: \"australia\"\n            },\n            {\n                label: \"austria\",\n                value: \"austria\"\n            },\n            {\n                label: \"belgium\",\n                value: \"belgium\"\n            },\n            {\n                label: \"bermuda\",\n                value: \"bermuda\"\n            },\n            {\n                label: \"brazil\",\n                value: \"brazil\"\n            },\n            {\n                label: \"canada\",\n                value: \"canada\"\n            },\n            {\n                label: \"colombia\",\n                value: \"colombia\"\n            },\n            {\n                label: \"denmark\",\n                value: \"denmark\"\n            },\n            {\n                label: \"france\",\n                value: \"france\"\n            },\n            {\n                label: \"germany\",\n                value: \"germany\"\n            },\n            {\n                label: \"ireland\",\n                value: \"ireland\"\n            },\n            {\n                label: \"italy\",\n                value: \"italy\"\n            },\n            {\n                label: \"japan\",\n                value: \"japan\"\n            },\n            {\n                label: \"mauritius\",\n                value: \"mauritius\"\n            },\n            {\n                label: \"mexico\",\n                value: \"mexico\"\n            },\n            {\n                label: \"myanmar [burma]\",\n                value: \"myanmar [burma]\"\n            },\n            {\n                label: \"netherlands\",\n                value: \"netherlands\"\n            },\n            {\n                label: \"norway\",\n                value: \"norway\"\n            },\n            {\n                label: \"other\",\n                value: \"other\"\n            },\n            {\n                label: \"peru\",\n                value: \"peru\"\n            },\n            {\n                label: \"poland\",\n                value: \"poland\"\n            },\n            {\n                label: \"portugal\",\n                value: \"portugal\"\n            },\n            {\n                label: \"south africa\",\n                value: \"south africa\"\n            },\n            {\n                label: \"spain\",\n                value: \"spain\"\n            },\n            {\n                label: \"sweden\",\n                value: \"sweden\"\n            },\n            {\n                label: \"switzerland\",\n                value: \"switzerland\"\n            },\n            {\n                label: \"united kingdom\",\n                value: \"united kingdom\"\n            },\n            {\n                label: \"united states\",\n                value: \"united states\"\n            },\n            {\n                label: \"uruguay\",\n                value: \"uruguay\"\n            },\n            {\n                label: \"vanuatu\",\n                value: \"vanuatu\"\n            },\n            {\n                label: \"vatican city\",\n                value: \"vatican city\"\n            }\n        ]\n    },\n    neighborhood: {\n        defaultValue: !isEmpty(neighborhoods) && neighborhoods[0],\n        options: neighborhoods,\n        isDisabled: isEmpty(neighborhoods)\n    },\n    state: {\n        defaultValue: !isEmpty(states) && states[0],\n        options: states,\n        isDisabled: isEmpty(states)\n    }\n});\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavbarForm from \"../NavbarForm\";\nimport { Row, Col } from \"../common/Grid\";\nimport PropTypes from \"prop-types\";\nimport logo from \"../../logo.svg\";\n\nconst Navbar = () => (\n    <Wrapper>\n        <Row>\n            <LogoCol>\n                <Logo src={logo} alt=\"AIbnb\" />\n            </LogoCol>\n        </Row>\n        <Row>\n            <Col>\n                <NavbarForm />\n            </Col>\n        </Row>\n    </Wrapper>\n);\n\nNavbar.propTypes = {\n    cards: PropTypes.shape([])\n};\nexport default Navbar;\n\nconst Wrapper = styled.div`\n    padding: 30px 20px;\n    height: 100%;\n    width: 350px;\n    position: fixed;\n    z-index: 1;\n    top: 0;\n    left: 0;\n    background-color: rgba(250, 250, 250, 0.75);\n    overflow-x: hidden;\n    transition: 0.5s;\n`;\nconst Logo = styled.img`\n    width: 150px;\n    margin: auto;\n`;\nconst LogoCol = styled(Col)`\n    text-align: center;\n`;\n","import Navbar from \"./Navbar\";\nimport { compose, withProps } from \"recompose\";\n\nconst withCards = withProps(() => ({\n    cards: [\n        {\n            title: \"Room Type\"\n        },\n        {\n            title: \"Activity\"\n        }\n    ]\n}));\n\nexport default compose(withCards)(Navbar);\n","import { injectGlobal } from \"styled-components\";\nimport { normalize } from \"polished\";\n\ninjectGlobal`\n  ${normalize()};\n`;\n\ninjectGlobal`\n  * {\n    font-family: 'Roboto', sans-serif;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-size: 16px;\n  }\n\n  [cta] {\n    cursor: pointer;\n  }\n\n  input[type=\"text\"],\n  input[type=\"email\"],\n  input[type=\"password\"] {\n    border-radius: 0;\n  }\n\n  input::-ms-clear,\n  input::-ms-reveal {\n    display: none;\n  }\n\n  .leaflet-container {\n    height: 400px;\n    width: 80%;\n    margin: 0 auto;\n  }\n  input[type=\"text\"],\n  input[type=\"number\"]{\n    display: block;\n    width: 100%;\n    padding: .375rem .75rem;\n    font-size: 1rem;\n    line-height: 1.5;\n    color: #495057;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    border-radius: .25rem;\n    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;\n}\n\n.react-datepicker-wrapper, .react-datepicker__input-container  {\n    width: 100%;\n}\n\n\n\n`;\n","import { createAction } from \"redux-actions\";\n\nexport const setItem = createAction(\"HOME_PAGE/SET_ITEM\");\n","import { handleActions } from \"redux-actions\";\nimport { setItem } from \"../actions/actions\";\nimport { ITEM_CONSTANT } from \"../components/Main/constants\";\n\nconst initialState = {\n    isFetching: ITEM_CONSTANT\n};\n\nconst app = handleActions(\n    {\n        [setItem]: (state, { payload: { isFetching } }) => ({\n            ...state,\n            isFetching\n        })\n    },\n    initialState\n);\n\nexport default app;\n","export const ITEM_CONSTANT = \"\";\n","/* eslint-disable sort-keys */\nexport const setVisibilityFilter = filter => ({\n    type: \"SET_VISIBILITY_FILTER\",\n    filter\n});\n\nexport const VisibilityFilters = {\n    SHOW_ALL: \"SHOW_ALL\",\n    SHOW_COMPLETED: \"SHOW_COMPLETED\",\n    SHOW_ACTIVE: \"SHOW_ACTIVE\"\n};\n","import { VisibilityFilters } from \"../actions/map\";\n\nconst visibilityFilter = (state = VisibilityFilters.SHOW_ALL, action) => {\n    switch (action.type) {\n        case \"SET_VISIBILITY_FILTER\":\n            return action.filter;\n        default:\n            return state;\n    }\n};\n\nexport default visibilityFilter;\n","import { handleActions } from \"redux-actions\";\nimport {\n    setNavbarStates,\n    setNavbarNeighborhoods,\n    setListings,\n    setErrorMessage\n} from \"./actions\";\n\nconst defaultState = {\n    states: [],\n    neighborhoods: [],\n    listings: [],\n    errorMessage: \"\"\n};\n\nexport const navbar = handleActions(\n    {\n        [setNavbarStates]: (state, { payload }) => ({\n            ...state,\n            states: payload\n        }),\n        [setNavbarNeighborhoods]: (state, { payload }) => ({\n            ...state,\n            neighborhoods: payload\n        }),\n        [setListings]: (state, { payload }) => ({\n            ...state,\n            listings: payload\n        }),\n        [setErrorMessage]: (state, { payload }) => ({\n            ...state,\n            errorMessage: payload\n        })\n    },\n    defaultState\n);\n","import { combineReducers } from \"redux\";\nimport reducer from \"./reducer\";\nimport visibilityFilter from \"./map\";\nimport { reducer as form } from \"redux-form\";\nimport { navbar } from \"../components/NavbarForm/reducer\";\n\nexport default combineReducers({\n    form,\n    reducer,\n    navbar,\n    visibilityFilter\n    // Other reducers here\n});\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\nimport { routerMiddleware } from \"react-router-redux\";\nimport rootReducer from \"../reducers\";\n\nexport default function configureStore(predefinedState = {}, history) {\n    const composeEnhancers =\n        typeof window === \"object\" &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n            ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n            : compose;\n\n    const middleware = [thunk, routerMiddleware(history)];\n\n    if (process.env.NODE_ENV !== \"production\") {\n        middleware.push(reduxImmutableStateInvariant());\n    }\n\n    const enhancer = composeEnhancers(applyMiddleware(...middleware));\n\n    return createStore(rootReducer, predefinedState, enhancer);\n}\n","import React, { Fragment } from \"react\";\nimport Map from \"../Map\";\nimport Navbar from \"../Navbar\";\nimport \"./globalStyles\";\nimport configureStore from \"../../store/configureStore\";\nimport { Provider } from \"react-redux\";\n\nconst store = configureStore();\n\nconst Main = () => (\n    <Provider store={store}>\n        <Fragment>\n            <Navbar />\n            <Map />\n        </Fragment>\n    </Provider>\n);\n\nexport default Main;\n","import Main from \"./Main\";\n\nexport default Main;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { Router, Route } from \"react-router\";\nimport Main from \"./components/Main\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n    faBath,\n    faBed,\n    faUsers,\n    faStar\n} from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faBath);\nlibrary.add(faBed);\nlibrary.add(faUsers);\nlibrary.add(faStar);\n/* eslint-disable react/prop-types */\nconst App = ({ store, history }) => (\n    <Provider store={store}>\n        <Router history={history}>\n            <Route path=\"/\" component={Main} />\n        </Router>\n    </Provider>\n);\n\nexport default App;\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log(\n                                \"New content is available; please refresh.\"\n                            );\n\n                            // Execute callback\n                            if (config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get(\"content-type\").indexOf(\"javascript\") ===\n                    -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport createHistory from \"history/createBrowserHistory\";\nimport { hydrate } from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store/configureStore\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nconst initialState = window.__INITIAL_STATE__;\nconst history = createHistory();\nconst store = configureStore(initialState, history);\nhydrate(\n    <App history={history} store={store} />,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}